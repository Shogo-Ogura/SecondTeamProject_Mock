//
// MainScene.h
//

#pragma once

#include "Scene.h"

using Microsoft::WRL::ComPtr;
using std::unique_ptr;
using std::make_unique;
using namespace DirectX;

class MainScene final : public Scene {
public:
    MainScene();
    virtual ~MainScene() { Terminate(); }

    MainScene(MainScene&&) = default;
    MainScene& operator= (MainScene&&) = default;

    MainScene(MainScene const&) = delete;
    MainScene& operator= (MainScene const&) = delete;

    // These are the functions you will implement.
    void Initialize() override;
    void LoadAssets() override;

    void Terminate() override;

    void OnDeviceLost() override;
    void OnRestartSound() override;

    NextScene Update(const float deltaTime) override;
    void Render() override;

private:
    DX12::DESCRIPTORHEAP descriptorHeap;
    DX12::SPRITEBATCH    spriteBatch;
    DX12::HGPUDESCRIPTOR dx9GpuDescriptor;

    // 変数の宣言

    //背景
    DX9::SPRITE bgTestSprite;
    float bgPositionX;
    
    //スクロール速度
    enum { bgMoveSpeed = 600 };

    //背景ループ位置
    enum { bgResetPosition = 2560 };


    //プレイヤー
    //金魚
    DX9::SPRITE goldfishTestSprite;

    //ナマズ
    DX9::SPRITE catfishTestSprite;

    //鯉
    DX9::SPRITE carpTestSprite;

    //サイズ
    enum {
        //金魚
        goldfishX = 110,
        goldfishY = 70,
        //ナマズ
        catfishX = 150,
        catfishY = 110,
        //鯉
        carpX = 200,
        carpY = 150
    };

    //プレイヤー状態
    int playerStatus;

    enum playerState {
        goldfishState,
        catfishState,
        carpState
    };

    //プレイヤー座標
    float playerPositionX, playerPositionY;

    //プレイヤー自動移動速度
    enum { playerAutoMoveSpeed = 300 };

    //プレイヤー移動速度
    enum {
        playerMoveSpeedUp = 550,
        playerMoveSpeedDown = 550,
        playerMoveSpeedRight = 550,
        playerMoveSpeedLeft = 550
    };

    //プレイヤー移動範囲
    enum playerMoveRange {
        playerMoveRangeTop = 251,
        playerMoveRangeBottom = 720,
        playerMoveRangeRight = 1280,
        playerMoveRangeLeft = 0,
    };


    //虫(アイテム)
    DX9::SPRITE wormTestSprite;
    float wormPositionX, wormPositionY;


    //障害物
    //鳥
    DX9::SPRITE birdTestSprite;
    float birdPositionX, birdPositionY;

    //岩(大)
    DX9::SPRITE bigRockTestSprite;
    float bigRockPositionX,bigRockPositionY;
    
    //岩(小)
    DX9::SPRITE smallRockTestSprite;
    float smallRockPositionX, smallRockPositionY;

    //木
    DX9::SPRITE woodTestSprite;
    float woodPositionX, woodPositionY;


private:
    //Update内関数の定義

    //背景
    void bgMoveUpdate(const float deltaTime);


    //プレイヤー
    //移動可能範囲
    void playerMoveRangeUpdate(const float deltaTime);
    
    //自動移動
    void playerAutoMoveUpdate(const float deltaTime);
    
    //キーボード操作
    void playerControlKeyboardUpdate(const float deltaTime);
   
    //パッド操作
    void playerControlGamepadUpdate(const float deltaTime);


    //虫(アイテム)
    //移動
    void wormMoveUpdate(const float deltaTime);
    
    //当たり判定
    void wormCollisionDetectionUpdate(const float deltaTime);


    //障害物
    //移動

    //当たり判定
    //鳥 
    void birdCollisionDetectionUpdate(const float deltaTime);
    //岩(大)
    void bigRockCollisionDetectionUpdate(const float deltaTime);
    //岩(小)
    void smallRockCollisionDetectionUpdate(const float deltaTime);
    //木
    void woodCollisionDetectionUpdate(const float deltaTime);



    //当たり判定関数
    bool CollisionDetection(Rect& rect1, Rect& rect2);
};